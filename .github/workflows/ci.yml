name: Code check, Test and Coverage

permissions: read-all

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]

env:
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  POSTGRESQL_HOST: ${{ vars.POSTGRESQL_HOST }}
  POSTGRESQL_USER: ${{ vars.POSTGRESQL_USER }}
  POSTGRESQL_PASSWORD: ${{ vars.POSTGRESQL_PASSWORD }}
  POSTGRESQL_PORT: ${{ vars.POSTGRESQL_PORT }}
  SQLSERVER_HOST: ${{ vars.SQLSERVER_HOST }}
  SQLSERVER_USER: ${{ vars.SQLSERVER_USER }}
  SQLSERVER_PASSWORD: ${{ vars.SQLSERVER_PASSWORD }}
  SQLSERVER_PORT: ${{ vars.SQLSERVER_PORT }}
  MONGO_HOST: ${{ vars.MONGO_HOST }}
  MONGO_USER: ${{ vars.MONGO_USER }}
  MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
  MONGO_PORT: ${{ vars.MONGO_PORT }}
  BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}
  MYSQL_DBNAME: ${{vars.MYSQL_DBNAME }}

jobs:
  trunk_check:
    name: Trunk Check Runner
    runs-on: ubuntu-latest
    permissions:
      checks: write # For trunk to post annotations
      contents: read # For repo checkout

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trunk Check
        uses: trunk-io/trunk-action@v1

  tox:
    needs: trunk_check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U tox
      - name: Tox
        run: |
          echo ${{ secrets.CODECOV_TOKEN }}
          curl -sSL https://install.python-poetry.org | python3 -
          tox

  coverage:
    needs: tox
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: adambirds/docker-compose-action@v1.3.0
        with:
          compose-file: compose.yml
      - name: Generate coverage report
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          pip install -U pip
          poetry install --with dev
          poetry run coverage run -m pytest tests/
          poetry run coverage xml -o coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          name: codecov-pd-extras
          verbose: true
