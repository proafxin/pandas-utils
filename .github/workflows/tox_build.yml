name: Tox Build

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]



env:
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  POSTGRESQL_HOST: ${{ vars.POSTGRESQL_HOST }}
  POSTGRESQL_USER: ${{ vars.POSTGRESQL_USER }}
  POSTGRESQL_PASSWORD: ${{ vars.POSTGRESQL_PASSWORD }}
  POSTGRESQL_PORT: ${{ vars.POSTGRESQL_PORT }}
  SQLSERVER_HOST: ${{ vars.SQLSERVER_HOST }}
  SQLSERVER_USER: ${{ vars.SQLSERVER_USER }}
  SQLSERVER_PASSWORD: ${{ vars.SQLSERVER_PASSWORD }}
  SQLSERVER_PORT: ${{ vars.SQLSERVER_PORT }}
  MONGO_HOST: ${{ vars.MONGO_HOST }}
  MONGO_USER: ${{ vars.MONGO_USER }}
  MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
  MONGO_PORT: ${{ vars.MONGO_PORT }}
  BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
    services:
      mysql:
        image: mysql:latest
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # - name: MySQL container
      #   uses: addnab/docker-run-action@v3
      #   with:
      #     image: mysql:latest
      #     options: |
      #       -d
      #       --name mysql
      #       -p 3306:3306
      #       -e MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD
      - name: Postgres container
        uses: addnab/docker-run-action@v3
        with:
          image: postgres
          options: |
            -d
            --name postgres
            -p 5432:5432
            -e POSTGRES_PASSWORD=$POSTGRESQL_PASSWORD
      - name: SQL Server container
        uses: addnab/docker-run-action@v3
        with:
          image: mcr.microsoft.com/mssql/server:2022-latest
          options: |
            -d
            --name sqlserver
            -e "ACCEPT_EULA=Y"
            -e "MSSQL_TCP_PORT=1433"
            -e "MSSQL_SA_PASSWORD=$SQLSERVER_PASSWORD"
            -p 1433:1433
      - name: Tox
        run: |
          python3 -m pip install -U tox
          sudo apt install python3-dev default-libmysqlclient-dev build-essential -y
          python3 -m tox
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          name: codecov-pd-extras
          verbose: true
